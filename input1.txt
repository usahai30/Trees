BinaryTree<Integer> btree = new BinaryTree<Integer>(20);		
		btree.insert(10);
		btree.insert(5);
		btree.insert(15);
		btree.insert(12);
		btree.insert(30);
		btree.insert(25);
		btree.insert(35);
		
		btree.levelOrder();
		btree.delete(10);
		System.out.println("\n");
		btree.levelOrder();
		btree.delete(12);
		System.out.println("\n");
		btree.levelOrder();
		btree.delete(30);
		System.out.println("\n");
		btree.levelOrder();
		btree.delete(15);
		System.out.println("\n");
		btree.levelOrder();
		btree.delete(20);
		System.out.println("\n");
		btree.levelOrder();
		btree.delete(25);
		System.out.println("\n");
		btree.levelOrder();
		btree.delete(35);
		System.out.println("\n");
		btree.levelOrder();
		btree.delete(5);
		System.out.println("\n");
		btree.levelOrder();
		//System.out.println(btree.contains(15));
		
		
		
		
		
		
		
		
BinaryTree<String> btree = new BinaryTree<String>("east");		
		btree.insert("at");
		btree.insert("eat");
		btree.insert("am");
		btree.insert("ate");
		btree.insert("ear");
		
		btree.preOrder();
		System.out.println();
		
		TreeNode<String> node = btree.getNodeDetails("at");
		System.out.println(node.toString());